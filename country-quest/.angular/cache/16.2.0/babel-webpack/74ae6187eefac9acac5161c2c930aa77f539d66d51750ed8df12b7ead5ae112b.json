{"ast":null,"code":"var _class;\nimport { catchError, of, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CountriesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://restcountries.com/v3.1';\n    this.cacheStore = {\n      byCapital: {\n        term: '',\n        countries: []\n      },\n      byCountries: {\n        term: '',\n        countries: []\n      },\n      byRegion: {\n        region: '',\n        countries: []\n      }\n    };\n  }\n  getCountriesRequest(url) {\n    return this.http.get(url).pipe(catchError(() => of([])));\n  }\n  searchCountryByAlphaCode(code) {\n    const url = `${this.apiUrl}/alpha/${code}`;\n    console.log({\n      url\n    });\n    return this.http.get(url).pipe(map(countries => countries.length > 0 ? countries[0] : null), catchError(() => of(null)));\n  }\n  searchCapital(term) {\n    const url = `${this.apiUrl}/capital/${term}`;\n    return this.getCountriesRequest(url);\n  }\n  searchCountry(term) {\n    const url = `${this.apiUrl}/name/${term}`;\n    return this.getCountriesRequest(url);\n  }\n  searchRegion(term) {\n    const url = `${this.apiUrl}/region/${term}`;\n    return this.getCountriesRequest(url);\n  }\n}\n_class = CountriesService;\n_class.ɵfac = function CountriesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","of","map","CountriesService","constructor","http","apiUrl","cacheStore","byCapital","term","countries","byCountries","byRegion","region","getCountriesRequest","url","get","pipe","searchCountryByAlphaCode","code","console","log","length","searchCapital","searchCountry","searchRegion","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luisr\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\country-quest\\src\\app\\countries\\countries.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, catchError, of, map } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Country } from './interfaces/country';\r\nimport { CacheStore } from './interfaces/cache-store.interface';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CountriesService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private apiUrl: string = 'https://restcountries.com/v3.1';\r\n\r\n  public cacheStore: CacheStore = {\r\n    byCapital: {term: '', countries: []},\r\n    byCountries: {term: '', countries: []},\r\n    byRegion: {region: '': countries: []}\r\n  }\r\n\r\n\r\n  private getCountriesRequest(url: string): Observable<Country[]> {\r\n    return this.http.get<Country[]>(url)\r\n      .pipe(\r\n        catchError(() => of([]))\r\n      );\r\n  }\r\n\r\n  searchCountryByAlphaCode(code: string): Observable<Country | null> {\r\n    const url = `${this.apiUrl}/alpha/${code}`;\r\n    console.log({ url });\r\n\r\n    return this.http.get<Country[]>(url).pipe(\r\n      map((countries) => (countries.length > 0 ? countries[0] : null)),\r\n      catchError(() => of(null))\r\n    );\r\n  }\r\n\r\n  searchCapital(term: string): Observable<Country[]> {\r\n    const url = `${this.apiUrl}/capital/${term}`;\r\n    return this.getCountriesRequest(url);\r\n  }\r\n\r\n  searchCountry(term: string): Observable<Country[]> {\r\n    const url = `${this.apiUrl}/name/${term}`;\r\n    return this.getCountriesRequest(url);\r\n  }\r\n\r\n  searchRegion(term: string): Observable<Country[]> {\r\n    const url = `${this.apiUrl}/region/${term}`;\r\n    return this.getCountriesRequest(url);\r\n  }\r\n}\r\n"],"mappings":";AACA,SAAqBA,UAAU,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAMtD,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,MAAM,GAAW,gCAAgC;IAElD,KAAAC,UAAU,GAAe;MAC9BC,SAAS,EAAE;QAACC,IAAI,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAE,CAAC;MACpCC,WAAW,EAAE;QAACF,IAAI,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAE,CAAC;MACtCE,QAAQ,EAAE;QAACC,MAAM,EAAE,EAAE;QAAEH,SAAS,EAAE;MAAE;KACrC;EARsC;EAW/BI,mBAAmBA,CAACC,GAAW;IACrC,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAYD,GAAG,CAAC,CACjCE,IAAI,CACHjB,UAAU,CAAC,MAAMC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB;EACL;EAEAiB,wBAAwBA,CAACC,IAAY;IACnC,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACT,MAAM,UAAUa,IAAI,EAAE;IAC1CC,OAAO,CAACC,GAAG,CAAC;MAAEN;IAAG,CAAE,CAAC;IAEpB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAYD,GAAG,CAAC,CAACE,IAAI,CACvCf,GAAG,CAAEQ,SAAS,IAAMA,SAAS,CAACY,MAAM,GAAG,CAAC,GAAGZ,SAAS,CAAC,CAAC,CAAC,GAAG,IAAK,CAAC,EAChEV,UAAU,CAAC,MAAMC,EAAE,CAAC,IAAI,CAAC,CAAC,CAC3B;EACH;EAEAsB,aAAaA,CAACd,IAAY;IACxB,MAAMM,GAAG,GAAG,GAAG,IAAI,CAACT,MAAM,YAAYG,IAAI,EAAE;IAC5C,OAAO,IAAI,CAACK,mBAAmB,CAACC,GAAG,CAAC;EACtC;EAEAS,aAAaA,CAACf,IAAY;IACxB,MAAMM,GAAG,GAAG,GAAG,IAAI,CAACT,MAAM,SAASG,IAAI,EAAE;IACzC,OAAO,IAAI,CAACK,mBAAmB,CAACC,GAAG,CAAC;EACtC;EAEAU,YAAYA,CAAChB,IAAY;IACvB,MAAMM,GAAG,GAAG,GAAG,IAAI,CAACT,MAAM,WAAWG,IAAI,EAAE;IAC3C,OAAO,IAAI,CAACK,mBAAmB,CAACC,GAAG,CAAC;EACtC;;SA3CWZ,gBAAgB;;mBAAhBA,MAAgB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhB1B,MAAgB;EAAA2B,OAAA,EAAhB3B,MAAgB,CAAA4B,IAAA;EAAAC,UAAA,EADH;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}