{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { Subject, debounceTime } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SearchBoxComponent {\n  constructor() {\n    this.debouncer = new Subject();\n    this.onDebounce = new EventEmitter();\n    this.placeholder = '';\n    this.initialValue = '';\n  }\n  ngOnInit() {\n    this.debouncerSuscription = this.debouncer.pipe(debounceTime(1000)).subscribe(value => {\n      console.log('emitiendo value luego de 1 seg');\n      this.onDebounce.emit(value);\n    });\n  }\n  ngOnDestroy() {\n    this.debouncerSuscription?.unsubscribe();\n    console.log('debouncerSuscription destroy');\n  }\n  onKeyPress(searchTerm) {\n    // (keyup) es una función que se ejecuta cada vez que se escribe una tecla\n    // Luego de escribir en el input, next hace la emisión del observable y le envía el searchTerm\n    this.debouncer.next(searchTerm);\n  }\n}\n_class = SearchBoxComponent;\n_class.ɵfac = function SearchBoxComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"shared-search-box\"]],\n  inputs: {\n    placeholder: \"placeholder\",\n    initialValue: \"initialValue\"\n  },\n  outputs: {\n    onDebounce: \"onDebounce\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"placeholder\", \"value\", \"keyup\"], [\"txtInput\", \"\"]],\n  template: function SearchBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"input\", 0, 1);\n      i0.ɵɵlistener(\"keyup\", function SearchBoxComponent_Template_input_keyup_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onKeyPress(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"placeholder\", ctx.placeholder)(\"value\", ctx.initialValue);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","Subject","debounceTime","SearchBoxComponent","constructor","debouncer","onDebounce","placeholder","initialValue","ngOnInit","debouncerSuscription","pipe","subscribe","value","console","log","emit","ngOnDestroy","unsubscribe","onKeyPress","searchTerm","next","selectors","inputs","outputs","decls","vars","consts","template","SearchBoxComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","SearchBoxComponent_Template_input_keyup_0_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelementEnd","ɵɵproperty"],"sources":["C:\\Users\\luisr\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\country-quest\\src\\app\\shared\\components\\search-box\\search-box.component.ts","C:\\Users\\luisr\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\country-quest\\src\\app\\shared\\components\\search-box\\search-box.component.html"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Subject, Subscription, debounceTime } from 'rxjs';\n\n@Component({\n  selector: 'shared-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.css'],\n})\nexport class SearchBoxComponent implements OnInit, OnDestroy {\n  private debouncer: Subject<string> = new Subject<string>();\n  // Se agrega ? ya que inicialmente la subscripción no existe\n  private debouncerSuscription?: Subscription;\n\n  @Output()\n  public onDebounce = new EventEmitter<string>();\n\n  @Input()\n  public placeholder: string = '';\n\n  @Input()\n  public initialValue: string = '';\n\n  ngOnInit() {\n    this.debouncerSuscription = this.debouncer\n      .pipe(debounceTime(1000))\n      .subscribe((value) => {\n        console.log('emitiendo value luego de 1 seg');\n        this.onDebounce.emit(value);\n      });\n  }\n\n  ngOnDestroy() {\n    this.debouncerSuscription?.unsubscribe();\n    console.log('debouncerSuscription destroy');\n\n  }\n\n  onKeyPress(searchTerm: string) {\n    // (keyup) es una función que se ejecuta cada vez que se escribe una tecla\n    // Luego de escribir en el input, next hace la emisión del observable y le envía el searchTerm\n    this.debouncer.next(searchTerm);\n  }\n}\n","<!-- (keyup)=\"onKeyPress(txtInput.value)\" -->\n<!-- (keydown.enter)=\"emitValue(txtInput.value)\" -->\n<!-- (keyup) es una función que se ejecuta cada vez que se escribe una tecla -->\n\n<input\ntype=\"text\"\nclass=\"form-control\"\n[placeholder]=\"placeholder\"\n[value]=\"initialValue\"\n(keyup)=\"onKeyPress( txtInput.value)\"\n#txtInput\n>\n"],"mappings":";AAAA,SAIEA,YAAY,QAKP,eAAe;AACtB,SAASC,OAAO,EAAgBC,YAAY,QAAQ,MAAM;;AAO1D,OAAM,MAAOC,kBAAkB;EAL/BC,YAAA;IAMU,KAAAC,SAAS,GAAoB,IAAIJ,OAAO,EAAU;IAKnD,KAAAK,UAAU,GAAG,IAAIN,YAAY,EAAU;IAGvC,KAAAO,WAAW,GAAW,EAAE;IAGxB,KAAAC,YAAY,GAAW,EAAE;;EAEhCC,QAAQA,CAAA;IACN,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACL,SAAS,CACvCM,IAAI,CAACT,YAAY,CAAC,IAAI,CAAC,CAAC,CACxBU,SAAS,CAAEC,KAAK,IAAI;MACnBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACT,UAAU,CAACU,IAAI,CAACH,KAAK,CAAC;IAC7B,CAAC,CAAC;EACN;EAEAI,WAAWA,CAAA;IACT,IAAI,CAACP,oBAAoB,EAAEQ,WAAW,EAAE;IACxCJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAE7C;EAEAI,UAAUA,CAACC,UAAkB;IAC3B;IACA;IACA,IAAI,CAACf,SAAS,CAACgB,IAAI,CAACD,UAAU,CAAC;EACjC;;SAjCWjB,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAmB,SAAA;EAAAC,MAAA;IAAAhB,WAAA;IAAAC,YAAA;EAAA;EAAAgB,OAAA;IAAAlB,UAAA;EAAA;EAAAmB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCb/BE,EAAA,CAAAC,cAAA,kBAOC;MAFDD,EAAA,CAAAE,UAAA,mBAAAC,mDAAA;QAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAN,EAAA,CAAAO,WAAA;QAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAT,GAAA,CAAAZ,UAAA,CAAAmB,GAAA,CAAAzB,KAAA,CAA2B;MAAA,EAAC;MALrCmB,EAAA,CAAAS,YAAA,EAOC;;;MAJDT,EAAA,CAAAU,UAAA,gBAAAX,GAAA,CAAAxB,WAAA,CAA2B,UAAAwB,GAAA,CAAAvB,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}