{"ast":null,"code":"import { catchError, of, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HeroesService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = environment.baseUrl;\n  }\n  getHeroes() {\n    return this.httpClient.get(`${this.baseUrl}/heroes`);\n  }\n  getHeroeById(id) {\n    return this.httpClient.get(`${this.baseUrl}/heroes/${id}`).pipe(catchError(error => of(undefined)));\n  }\n  getSuggestions(query) {\n    return this.httpClient.get(`${this.baseUrl}/heroes?q=${query}&limit=6`);\n  }\n  addHero(hero) {\n    return this.httpClient.post(`${this.baseUrl}/heroes`, hero);\n  }\n  updateHero(hero) {\n    if (!hero.id) throw Error('Hero id is required');\n    return this.httpClient.patch(`${this.baseUrl}/heroes/${hero.id} `, hero);\n  }\n  deleteHero(id) {\n    return this.httpClient.delete(`${this.baseUrl}/heroes/${id}`).pipe(catchError(err => of(false)),\n    // map nos permite transformar la respuesta\n    map(resp => true));\n  }\n  static #_ = this.ɵfac = function HeroesService_Factory(t) {\n    return new (t || HeroesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeroesService,\n    factory: HeroesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","of","map","environment","HeroesService","constructor","httpClient","baseUrl","getHeroes","get","getHeroeById","id","pipe","error","undefined","getSuggestions","query","addHero","hero","post","updateHero","Error","patch","deleteHero","delete","err","resp","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luisr\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\heroesApp\\src\\app\\heroes\\services\\heroes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, of, map } from 'rxjs';\r\nimport { Hero } from '../interfaces/hero.interface';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HeroesService {\r\n\r\n  private baseUrl: string = environment.baseUrl;\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  getHeroes(): Observable<Hero[]> {\r\n    return this.httpClient.get<Hero[]>(`${this.baseUrl}/heroes`);\r\n  }\r\n\r\n  getHeroeById(id: string): Observable<Hero | undefined> {\r\n    return this.httpClient.get<Hero>(`${this.baseUrl}/heroes/${id}`)\r\n      .pipe(\r\n        catchError(error => of(undefined))\r\n      )\r\n  }\r\n\r\n  getSuggestions(query: string): Observable<Hero[]> {\r\n    return this.httpClient.get<Hero[]>(`${this.baseUrl}/heroes?q=${query}&limit=6`);\r\n  }\r\n\r\n  addHero(hero: Hero): Observable<Hero> {\r\n    return this.httpClient.post<Hero>(`${this.baseUrl}/heroes`, hero)\r\n  }\r\n\r\n  updateHero(hero: Hero): Observable<Hero> {\r\n    if (!hero.id) throw Error('Hero id is required');\r\n    return this.httpClient.patch<Hero>(`${this.baseUrl}/heroes/${hero.id} `, hero)\r\n  }\r\n\r\n  deleteHero(id: string): Observable<boolean> {\r\n    return this.httpClient.delete<Hero>(`${this.baseUrl}/heroes/${id}`)\r\n      .pipe(\r\n        catchError(err => of(false)),\r\n        // map nos permite transformar la respuesta\r\n        map(resp => true)\r\n      )\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;AAEtD,SAASC,WAAW,QAAQ,8BAA8B;;;AAG1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAWJ,WAAW,CAACI,OAAO;EACC;EAG9CC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,SAAS,CAAC;EAC9D;EAEAG,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,WAAWI,EAAE,EAAE,CAAC,CAC7DC,IAAI,CACHZ,UAAU,CAACa,KAAK,IAAIZ,EAAE,CAACa,SAAS,CAAC,CAAC,CACnC;EACL;EAEAC,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACV,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,aAAaS,KAAK,UAAU,CAAC;EACjF;EAEAC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAO,GAAG,IAAI,CAACZ,OAAO,SAAS,EAAEW,IAAI,CAAC;EACnE;EAEAE,UAAUA,CAACF,IAAU;IACnB,IAAI,CAACA,IAAI,CAACP,EAAE,EAAE,MAAMU,KAAK,CAAC,qBAAqB,CAAC;IAChD,OAAO,IAAI,CAACf,UAAU,CAACgB,KAAK,CAAO,GAAG,IAAI,CAACf,OAAO,WAAWW,IAAI,CAACP,EAAE,GAAG,EAAEO,IAAI,CAAC;EAChF;EAEAK,UAAUA,CAACZ,EAAU;IACnB,OAAO,IAAI,CAACL,UAAU,CAACkB,MAAM,CAAO,GAAG,IAAI,CAACjB,OAAO,WAAWI,EAAE,EAAE,CAAC,CAChEC,IAAI,CACHZ,UAAU,CAACyB,GAAG,IAAIxB,EAAE,CAAC,KAAK,CAAC,CAAC;IAC5B;IACAC,GAAG,CAACwB,IAAI,IAAI,IAAI,CAAC,CAClB;EACL;EAAC,QAAAC,CAAA,G;qBArCUvB,aAAa,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb5B,aAAa;IAAA6B,OAAA,EAAb7B,aAAa,CAAA8B,IAAA;IAAAC,UAAA,EADA;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}