{"ast":null,"code":"import { catchError, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HeroesService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = environment.baseUrl;\n  }\n  getHeroes() {\n    return this.httpClient.get(`${this.baseUrl}/heroes`);\n  }\n  getHeroe(id) {\n    return this.httpClient.get(`${this.baseUrl}/heroes/${id}`).pipe(catchError(error => of(undefined)));\n  }\n  getSuggestions(query) {\n    return this.httpClient.get(`${this.baseUrl}/heroes?q=${query}&limit=6`);\n  }\n  addHero(hero) {\n    return this.httpClient.post(`${this.baseUrl}/heroes`, hero);\n  }\n  static #_ = this.ɵfac = function HeroesService_Factory(t) {\n    return new (t || HeroesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeroesService,\n    factory: HeroesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","of","environment","HeroesService","constructor","httpClient","baseUrl","getHeroes","get","getHeroe","id","pipe","error","undefined","getSuggestions","query","addHero","hero","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luisr\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\heroesApp\\src\\app\\heroes\\services\\heroes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, of } from 'rxjs';\r\nimport { Hero } from '../interfaces/hero.interface';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class HeroesService {\r\n\r\n  private baseUrl:string = environment.baseUrl;\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  getHeroes():Observable<Hero[]>{\r\n    return this.httpClient.get<Hero[]>(`${this.baseUrl}/heroes`);\r\n  }\r\n\r\n  getHeroe(id: string):Observable<Hero| undefined>{\r\n      return this.httpClient.get<Hero>(`${this.baseUrl}/heroes/${id}`)\r\n        .pipe(\r\n          catchError( error => of(undefined))\r\n        )\r\n  }\r\n\r\n  getSuggestions( query: string): Observable<Hero[]>{\r\n    return this.httpClient.get<Hero[]>(`${this.baseUrl}/heroes?q=${ query }&limit=6`);\r\n  }\r\n\r\n  addHero(hero: Hero): Observable<Hero>{\r\n    return this.httpClient.post<Hero>(`${ this.baseUrl }/heroes`, hero)\r\n\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,EAAE,QAAQ,MAAM;AAEjD,SAASC,WAAW,QAAQ,8BAA8B;;;AAG1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAUJ,WAAW,CAACI,OAAO;EACE;EAG9CC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,SAAS,CAAC;EAC9D;EAEAG,QAAQA,CAACC,EAAU;IACf,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,OAAO,WAAWI,EAAE,EAAE,CAAC,CAC7DC,IAAI,CACHX,UAAU,CAAEY,KAAK,IAAIX,EAAE,CAACY,SAAS,CAAC,CAAC,CACpC;EACP;EAEAC,cAAcA,CAAEC,KAAa;IAC3B,OAAO,IAAI,CAACV,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,aAAcS,KAAM,UAAU,CAAC;EACnF;EAEAC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAO,GAAI,IAAI,CAACZ,OAAQ,SAAS,EAAEW,IAAI,CAAC;EAErE;EAAC,QAAAE,CAAA,G;qBAxBUhB,aAAa,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbrB,aAAa;IAAAsB,OAAA,EAAbtB,aAAa,CAAAuB,IAAA;IAAAC,UAAA,EADD;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}