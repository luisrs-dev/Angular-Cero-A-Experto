{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { filter, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/countries.service\";\nimport * as i3 from \"@angular/common\";\nfunction SelectorPageComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", region_r3, \" \");\n  }\n}\nfunction SelectorPageComponent_div_12_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r5.cca3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r5.name, \" \");\n  }\n}\nfunction SelectorPageComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Pa\\u00EDs:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 9)(5, \"option\", 5);\n    i0.ɵɵtext(6, \"Seleccione pa\\u00EDs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, SelectorPageComponent_div_12_option_7_Template, 2, 2, \"option\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.countriesByRegion);\n  }\n}\nfunction SelectorPageComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Fronteras:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 10)(5, \"option\", 5);\n    i0.ɵɵtext(6, \"Seleccione frontera\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class SelectorPageComponent {\n  constructor(fb, countriesService) {\n    this.fb = fb;\n    this.countriesService = countriesService;\n    this.countriesByRegion = [];\n    this.myForm = this.fb.group({\n      region: ['', [Validators.required]],\n      country: ['', [Validators.required]],\n      border: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.onRegionChanged();\n    this.onCountryChanged();\n  }\n  get regions() {\n    return this.countriesService.regions;\n  }\n  onRegionChanged() {\n    this.myForm.get('region').valueChanges.pipe(tap(() => this.myForm.get('country').setValue('')), switchMap(region => this.countriesService.getCountriesByRegion(region))).subscribe(countries => {\n      this.countriesByRegion = countries;\n      console.log({\n        countries\n      });\n    });\n  }\n  onCountryChanged() {\n    this.myForm.get('country').valueChanges.pipe(tap(() => this.myForm.get('border').setValue('')),\n    // filter -> si se cumple la condición sigue con la solicitud\n    filter(value => value.length > 0), switchMap(alphaCode => this.countriesService.getCountryByAlphaCode(alphaCode))).subscribe(country => {\n      // this.countriesByRegion = countries;\n      console.log(country);\n    });\n  }\n  static #_ = this.ɵfac = function SelectorPageComponent_Factory(t) {\n    return new (t || SelectorPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CountriesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectorPageComponent,\n    selectors: [[\"app-selector-page\"]],\n    decls: 22,\n    vars: 10,\n    consts: [[\"action\", \"\", 3, \"formGroup\"], [1, \"row\", \"mb-3\"], [1, \"col\"], [1, \"form-label\"], [\"formControlName\", \"region\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row mb-3\", 4, \"ngIf\"], [3, \"value\"], [\"formControlName\", \"country\", 1, \"form-control\"], [\"formControlName\", \"border\", 1, \"form-control\"]],\n    template: function SelectorPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Selectores anidados\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"form\", 0)(4, \"div\", 1)(5, \"div\", 2)(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Continente:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 4)(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Seleccione continente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, SelectorPageComponent_option_11_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(12, SelectorPageComponent_div_12_Template, 8, 1, \"div\", 7);\n        i0.ɵɵtemplate(13, SelectorPageComponent_div_13_Template, 7, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"h3\");\n        i0.ɵɵtext(15, \"Formulario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"code\");\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"json\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countriesByRegion.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countriesByRegion.length > 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 6, ctx.myForm.value), \"\\n\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"is form valid: \", i0.ɵɵpipeBind1(21, 8, ctx.myForm.valid), \"\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.JsonPipe],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Validators","filter","switchMap","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r3","ɵɵadvance","ɵɵtextInterpolate1","country_r5","cca3","name","ɵɵtemplate","SelectorPageComponent_div_12_option_7_Template","ctx_r1","countriesByRegion","SelectorPageComponent","constructor","fb","countriesService","myForm","group","region","required","country","border","ngOnInit","onRegionChanged","onCountryChanged","regions","get","valueChanges","pipe","setValue","getCountriesByRegion","subscribe","countries","console","log","value","length","alphaCode","getCountryByAlphaCode","_","ɵɵdirectiveInject","i1","FormBuilder","i2","CountriesService","_2","selectors","decls","vars","consts","template","SelectorPageComponent_Template","rf","ctx","ɵɵelement","SelectorPageComponent_option_11_Template","SelectorPageComponent_div_12_Template","SelectorPageComponent_div_13_Template","ɵɵpipeBind1","valid"],"sources":["C:\\Users\\luisr\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\selectores\\src\\app\\countries\\pages\\selector-page\\selector-page.component.ts","C:\\Users\\luisr\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\selectores\\src\\app\\countries\\pages\\selector-page\\selector-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CountriesService } from '../../services/countries.service';\nimport { Region, SmallCountry } from '../../interfaces/country.interface';\nimport { filter, switchMap, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-selector-page',\n  templateUrl: './selector-page.component.html',\n  styles: [\n  ]\n})\nexport class SelectorPageComponent implements OnInit {\n\n  public countriesByRegion: SmallCountry[] = [];\n\n  public myForm: FormGroup = this.fb.group({\n    region: ['', [Validators.required]],\n    country: ['', [Validators.required]],\n    border: ['', [Validators.required]],\n  })\n\n  constructor(\n    private fb: FormBuilder,\n    private countriesService: CountriesService\n  ) { }\n\n  ngOnInit(): void {\n    this.onRegionChanged();\n    this.onCountryChanged();\n  }\n\n  get regions(): Region[] {\n    return this.countriesService.regions;\n  }\n\n  onRegionChanged(): void {\n    this.myForm.get('region')!.valueChanges\n      .pipe(\n        tap(() => this.myForm.get('country')!.setValue('')),\n        switchMap(region => this.countriesService.getCountriesByRegion(region))\n      )\n      .subscribe(countries => {\n        this.countriesByRegion = countries;\n        console.log({ countries });\n      })\n  }\n\n  onCountryChanged(): void {\n\n    this.myForm.get('country')!.valueChanges\n      .pipe(\n        tap(() => this.myForm.get('border')!.setValue('')),\n        // filter -> si se cumple la condición sigue con la solicitud\n        filter((value: string) => value.length > 0),\n        switchMap(alphaCode => this.countriesService.getCountryByAlphaCode(alphaCode))\n      )\n      .subscribe(country => {\n        // this.countriesByRegion = countries;\n        console.log(country);\n\n      })\n  }\n\n\n}\n","<h1>Selectores anidados</h1>\n<hr />\n<form [formGroup]=\"myForm\" action=\"\">\n  <!-- Region -->\n  <div class=\"row mb-3\">\n    <div class=\"col\">\n      <label class=\"form-label\">Continente:</label>\n      <select class=\"form-control\" formControlName=\"region\">\n        <option value=\"\">Seleccione continente</option>\n        <option *ngFor=\"let region of regions\" [value]=\"region\">\n          {{ region }}\n        </option>\n      </select>\n    </div>\n  </div>\n\n  <!-- Countries -->\n  <div class=\"row mb-3\" *ngIf=\"countriesByRegion.length > 0\">\n    <div class=\"col\">\n      <label class=\"form-label\">País:</label>\n      <select class=\"form-control\" formControlName=\"country\">\n        <option value=\"\">Seleccione país</option>\n        <option\n          *ngFor=\"let country of countriesByRegion\"\n          [value]=\"country.cca3\"\n        >\n          {{ country.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n\n  <!-- Fronteras -->\n  <div class=\"row mb-3\" *ngIf=\"countriesByRegion.length > 0\">\n    <div class=\"col\">\n      <label class=\"form-label\">Fronteras:</label>\n      <select class=\"form-control\" formControlName=\"border\">\n        <option value=\"\">Seleccione frontera</option>\n        <!-- <option\n          *ngFor=\"let country of countriesByRegion\"\n          [value]=\"country.cca3\"\n        >\n          {{ country.name }}\n        </option> -->\n      </select>\n    </div>\n  </div>\n</form>\n\n<h3>Formulario</h3>\n<code>\n  {{ myForm.value | json }}\n</code>\n<p>is form valid: {{ myForm.valid | json }}</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}