{"ast":null,"code":"var _class;\nimport { switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../countries.service\";\nexport class CountryPageComponent {\n  constructor(activatedRouter, router, countriesService) {\n    this.activatedRouter = activatedRouter;\n    this.router = router;\n    this.countriesService = countriesService;\n  }\n  ngOnInit() {\n    // this.activatedRouter.params.subscribe(({ id }) => {\n    //   this.countriesService\n    //     .searchCountryByAlphaCode(id)\n    //     .subscribe((country) => {\n    //       console.log({ country });\n    //     });\n    // });\n    this.activatedRouter.params.pipe(switchMap(({\n      id\n    }) => this.countriesService.searchCountryByAlphaCode(id))).subscribe(country => {\n      if (!country) return this.router.navigate(['']);\n      console.log({\n        country\n      });\n      return;\n    });\n  }\n}\n_class = CountryPageComponent;\n_class.ɵfac = function CountryPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CountriesService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-country-page\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-12\"]],\n  template: function CountryPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\");\n      i0.ɵɵtext(4, \"Pa\\u00EDs: \");\n      i0.ɵɵelementStart(5, \"strong\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.country == null ? null : ctx.country.name == null ? null : ctx.country.name.common);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["switchMap","CountryPageComponent","constructor","activatedRouter","router","countriesService","ngOnInit","params","pipe","id","searchCountryByAlphaCode","subscribe","country","navigate","console","log","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","CountriesService","selectors","decls","vars","consts","template","CountryPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","name","common"],"sources":["C:\\Users\\luisr\\Dropbox\\PC (3)\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\countryApp\\src\\app\\countries\\pages\\country-page\\country-page.component.ts","C:\\Users\\luisr\\Dropbox\\PC (3)\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\countryApp\\src\\app\\countries\\pages\\country-page\\country-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CountriesService } from '../../countries.service';\nimport { switchMap } from 'rxjs';\nimport { Country } from '../../interfaces/country';\n\n@Component({\n  selector: 'app-country-page',\n  templateUrl: './country-page.component.html',\n  styles: [],\n})\nexport class CountryPageComponent {\n\n  private country?: Country;\n\n  constructor(\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private countriesService: CountriesService,\n  ) {}\n\n  ngOnInit(): void {\n    // this.activatedRouter.params.subscribe(({ id }) => {\n    //   this.countriesService\n    //     .searchCountryByAlphaCode(id)\n    //     .subscribe((country) => {\n    //       console.log({ country });\n    //     });\n    // });\n\n    this.activatedRouter.params\n      .pipe(\n        switchMap( ({id}) => this.countriesService.searchCountryByAlphaCode(id))\n      )\n      .subscribe( country => {\n        if(!country) return this.router.navigate(['']);\n        console.log({country});\n        return;\n      })\n\n  }\n}\n","<div>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2>País: <strong>{{country?.name?.common}}</strong></h2>\n    </div>\n  </div>\n</div>\n"],"mappings":";AAGA,SAASA,SAAS,QAAQ,MAAM;;;;AAQhC,OAAM,MAAOC,oBAAoB;EAI/BC,YACUC,eAA+B,EAC/BC,MAAc,EACdC,gBAAkC;IAFlC,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,gBAAgB,GAAhBA,gBAAgB;EACvB;EAEHC,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACH,eAAe,CAACI,MAAM,CACxBC,IAAI,CACHR,SAAS,CAAE,CAAC;MAACS;IAAE,CAAC,KAAK,IAAI,CAACJ,gBAAgB,CAACK,wBAAwB,CAACD,EAAE,CAAC,CAAC,CACzE,CACAE,SAAS,CAAEC,OAAO,IAAG;MACpB,IAAG,CAACA,OAAO,EAAE,OAAO,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9CC,OAAO,CAACC,GAAG,CAAC;QAACH;MAAO,CAAC,CAAC;MACtB;IACF,CAAC,CAAC;EAEN;;SA7BWX,oBAAoB;;mBAApBA,MAAoB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,MAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,gBAAA;AAAA;;QAApBrB,MAAoB;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXjCb,EAAA,CAAAe,cAAA,UAAK;MAGKf,EAAA,CAAAgB,MAAA,kBAAM;MAAAhB,EAAA,CAAAe,cAAA,aAAQ;MAAAf,EAAA,CAAAgB,MAAA,GAAyB;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;MAAlCjB,EAAA,CAAAkB,SAAA,GAAyB;MAAzBlB,EAAA,CAAAmB,iBAAA,CAAAL,GAAA,CAAAlB,OAAA,kBAAAkB,GAAA,CAAAlB,OAAA,CAAAwB,IAAA,kBAAAN,GAAA,CAAAlB,OAAA,CAAAwB,IAAA,CAAAC,MAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}