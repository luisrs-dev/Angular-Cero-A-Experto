{"ast":null,"code":"var _class;\nimport { catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CountriesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://restcountries.com/v3.1';\n  }\n  searchCountryByAlphaCode(code) {\n    const url = `${this.apiUrl}/aplha/${code}`;\n    console.log({\n      url\n    });\n    return this.http.get(url).pipe(catchError(error => {\n      console.log(error);\n      return of([]);\n      // [] es la información que los subscriber están esperando\n    }));\n  }\n\n  searchCapital(term) {\n    const url = `${this.apiUrl}/capital/${term}`;\n    return this.http.get(url).pipe(catchError(() => of([]))\n    // catchError( error => {\n    //   console.log(error);\n    //   return of([]);\n    //   [] es la información que los subscriber están esperando\n    // })\n    );\n  }\n\n  searchCountry(term) {\n    const url = `${this.apiUrl}/name/${term}`;\n    return this.http.get(url).pipe(catchError(() => of([])));\n  }\n  searchRegion(term) {\n    const url = `${this.apiUrl}/region/${term}`;\n    return this.http.get(url).pipe(catchError(() => of([])));\n  }\n}\n_class = CountriesService;\n_class.ɵfac = function CountriesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","of","CountriesService","constructor","http","apiUrl","searchCountryByAlphaCode","code","url","console","log","get","pipe","error","searchCapital","term","searchCountry","searchRegion","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luisr\\Dropbox\\PC (3)\\Documents\\Develop\\Curso Angular - Fernando Herrera 2023\\Angular\\countryApp\\src\\app\\countries\\countries.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, catchError, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Country } from './interfaces/country';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CountriesService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private apiUrl: string = 'https://restcountries.com/v3.1';\r\n\r\n  searchCountryByAlphaCode(code: string): Observable<Country[]> {\r\n    const url = `${this.apiUrl}/aplha/${code}`;\r\n    console.log({url});\r\n\r\n    return this.http.get<Country[]>(url)\r\n    .pipe(\r\n      catchError( error => {\r\n            console.log(error);\r\n            return of([]);\r\n            // [] es la información que los subscriber están esperando\r\n          })\r\n    )\r\n  }\r\n\r\n\r\n  searchCapital(term: string): Observable<Country[]> {\r\n\r\n    const url = `${this.apiUrl}/capital/${term}`;\r\n    return this.http.get<Country[]>(url)\r\n      .pipe(\r\n        catchError ( () => of([]))\r\n        // catchError( error => {\r\n        //   console.log(error);\r\n        //   return of([]);\r\n        //   [] es la información que los subscriber están esperando\r\n        // })\r\n      )\r\n  }\r\n\r\n  searchCountry(term: string): Observable<Country[]> {\r\n\r\n    const url = `${this.apiUrl}/name/${term}`;\r\n    return this.http.get<Country[]>(url)\r\n      .pipe(\r\n        catchError ( () => of([]))\r\n      )\r\n  }\r\n\r\n  searchRegion(term: string): Observable<Country[]> {\r\n\r\n    const url = `${this.apiUrl}/region/${term}`;\r\n    return this.http.get<Country[]>(url)\r\n      .pipe(\r\n        catchError ( () => of([]))\r\n      )\r\n  }\r\n\r\n}\r\n"],"mappings":";AACA,SAAqBA,UAAU,EAAEC,EAAE,QAAQ,MAAM;;;AAKjD,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,MAAM,GAAW,gCAAgC;EAFjB;EAIxCC,wBAAwBA,CAACC,IAAY;IACnC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,UAAUE,IAAI,EAAE;IAC1CE,OAAO,CAACC,GAAG,CAAC;MAACF;IAAG,CAAC,CAAC;IAElB,OAAO,IAAI,CAACJ,IAAI,CAACO,GAAG,CAAYH,GAAG,CAAC,CACnCI,IAAI,CACHZ,UAAU,CAAEa,KAAK,IAAG;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MAClB,OAAOZ,EAAE,CAAC,EAAE,CAAC;MACb;IACF,CAAC,CAAC,CACP;EACH;;EAGAa,aAAaA,CAACC,IAAY;IAExB,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,YAAYU,IAAI,EAAE;IAC5C,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAYH,GAAG,CAAC,CACjCI,IAAI,CACHZ,UAAU,CAAG,MAAMC,EAAE,CAAC,EAAE,CAAC;IACzB;IACA;IACA;IACA;IACA;KACD;EACL;;EAEAe,aAAaA,CAACD,IAAY;IAExB,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,SAASU,IAAI,EAAE;IACzC,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAYH,GAAG,CAAC,CACjCI,IAAI,CACHZ,UAAU,CAAG,MAAMC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC3B;EACL;EAEAgB,YAAYA,CAACF,IAAY;IAEvB,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,WAAWU,IAAI,EAAE;IAC3C,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAYH,GAAG,CAAC,CACjCI,IAAI,CACHZ,UAAU,CAAG,MAAMC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC3B;EACL;;SAlDWC,gBAAgB;;mBAAhBA,MAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhBnB,MAAgB;EAAAoB,OAAA,EAAhBpB,MAAgB,CAAAqB,IAAA;EAAAC,UAAA,EADJ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}